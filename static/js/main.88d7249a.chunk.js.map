{"version":3,"sources":["App/useTodos.js","App/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","CreateTodoButton/index.js","TodoItem/index.js","Modal/index.js","TodoForm/index.js","EmptyTodos/index.js","TodosLoading/index.js","TodosError/index.js","TodoHeader/index.js","ChangeAlert/index.js","ChangeAlert/useStorageListener.js","EagleModeButton/index.js","EagleModeModal/index.js","EagleModeList/index.js","RetributionModeButton/index.js","RetributionModeModal/index.js","RetributionModeList/index.js","App/index.js","index.js"],"names":["useTodos","itemName","initialValue","React","useState","error","setError","loading","setLoading","item","setItem","syncItem","setSyncItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","sync","useLocalStorage","todos","saveTodos","syncTodos","searchValue","setSearchValue","openModal","setOpenModal","eagleMode","setEagleMode","RetributionMode","setRetributionMode","completedTodos","filter","todo","completed","length","totalTodos","uncompleteTodosList","console","log","completedTodosList","searchedTodos","todoText","text","toLowerCase","searchText","includes","addTodo","newTodos","fetchTodos","a","fetch","res","json","slice","template","forEach","push","title","completeTodo","todoIndex","findIndex","deleteTodo","splice","TodoCounter","className","TodoSearch","placeholder","value","onChange","e","target","disabled","TodoList","props","renderFunction","children","render","onError","onLoading","onEmptyTodos","onEmptySearchResults","map","CreateTodoButton","onClick","prevState","TodoItem","onComplete","onDelete","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","id","type","EmptyTodos","TodosLoading","TodosError","TodoHeader","ChangeAlert","syncronize","storageChange","setStorageChange","window","addEventListener","change","key","showUp","toggleShow","useStorageListener","EagleModeButton","EagleModeModal","EagleModeList","renderList","RetributionModeButton","RetributionModeModal","RetributionModeList","App","Fragment","style","textAlign","color"],"mappings":"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","file":"static/js/main.88d7249a.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\n\nfunction useTodos(){\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        sync: syncTodos,\n        loading,\n        error,\n      } = useLocalStorage('TODOS_V1', []);\n      const [searchValue, setSearchValue] = React.useState('');\n      const [openModal, setOpenModal] = React.useState(false);\n      const [eagleMode, setEagleMode] = React.useState(false);\n      const [RetributionMode, setRetributionMode] = React.useState(false);\n    \n      const completedTodos = todos.filter(todo => !!todo.completed).length;\n      const totalTodos = todos.length;\n      const uncompleteTodosList = todos.filter(todo => !todo.completed);\n      console.log(uncompleteTodosList)\n      const completedTodosList = todos.filter(todo => !!todo.completed)\n      console.log(completedTodosList)\n\n\n      let searchedTodos = [];\n    \n      if (!searchValue.length >= 1){\n        searchedTodos = todos;\n      } else {\n        searchedTodos = todos.filter(todo => {\n          const todoText = todo.text.toLowerCase();\n          const searchText = searchValue.toLowerCase();\n          return todoText.includes(searchText);\n        });\n      }\n    \n      const addTodo = (text) => {\n        const newTodos = [...todos];\n        if(text === 'UTemplate'){\n          const fetchTodos = async () =>{\n            const res = await fetch('https://jsonplaceholder.typicode.com/todos'),\n                  json = await res.json(),\n                  template = await json.slice(0, 10);\n            console.log(template);\n\n            template.forEach(item => {\n            newTodos.push({\n              completed: false,\n              text: item.title\n            })\n            saveTodos(newTodos);\n            })\n          }\n          fetchTodos();\n        } else {\n          newTodos.push({\n            completed: false,\n            text,\n          });\n          saveTodos(newTodos);\n        }\n      };\n\n      const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = true;\n        saveTodos(newTodos);\n      };\n    \n      const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n      };\n    \n      // React.useEffect(()=>{\n      //   console.log('use effect')\n      // }, []); \n    \n\n    return {\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            uncompleteTodosList,\n            completedTodosList,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            addTodo,\n            completeTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal,\n            syncTodos,\n            eagleMode,\n            setEagleMode,\n            RetributionMode,\n            setRetributionMode\n        };\n}\n\n\nexport { useTodos }; ","import React, { useState } from \"react\";\n\nfunction useLocalStorage(itemName, initialValue){\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n    const [syncItem, setSyncItem] = useState(true);\n\n  \n    React.useEffect(()=>{\n      setTimeout(()=>{\n        try{\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n  \n        if(!localStorageItem){\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n  \n        setItem(parsedItem);\n        setLoading(false);\n        setSyncItem(true);\n        } catch(error) {\n          setError(error);\n        }\n      }, 1500);\n    }, [syncItem]);\n  \n  \n    const saveItem = (newItem) => {\n      try{\n        const stringifiedItem = JSON.stringify(newItem);\n        localStorage.setItem(itemName, stringifiedItem);\n        setItem(newItem);\n      } catch(error){\n        setError(error);\n      }\n    };\n  \n    const sync = () =>{\n      setLoading(true);\n      setSyncItem(false);\n    }\n\n\n    return {\n      item,\n      saveItem,\n      loading,\n      error,\n      sync\n    };\n  }\n\n\n  export { useLocalStorage };","import React from \"react\";\nimport './TodoCounter.css';\n\nfunction TodoCounter({ totalTodos, completedTodos, loading }){\n    return(\n        <h2 \n        className={`TodoCounter ${!!loading && \"TodoCounter--loading\"}`}\n        >\n        You've got {completedTodos} out of {totalTodos} TODO's done.\n        </h2>\n    );\n}\n\nexport { TodoCounter };","import React from \"react\";\nimport './TodoSearch.css';\n\n\nfunction TodoSearch({ searchValue, setSearchValue, loading }){\n    const onSearchValueChange = (e) => {\n        // console.log(e.target.value);\n        setSearchValue(e.target.value);\n    };\n\n    return(\n        <div className= \"search-container\">\n            <div className=\"search-title\">\n                <p>Look for tasks</p>\n            </div>\n            <input \n            className=\"TodoSearch\" \n            placeholder=\"Buy eggs\" \n            value={searchValue}\n            onChange = { onSearchValueChange }\n            disabled={loading}\n        />\n        </div> \n    );\n}\n\nexport { TodoSearch };","import React from \"react\";\nimport './TodoList.css';\n\n\nfunction TodoList(props){\n    \n    const renderFunction = props.children || props.render;\n\n    return(\n        <section className=\"tasks-container\">\n            {props.error && props.onError()}\n\n            {props.loading && props.onLoading()}\n\n            {(!props.loading && !props.totalTodos) && props.onEmptyTodos()}\n\n            {(!!props.totalTodos && !props.searchedTodos.length) && props.onEmptySearchResults(props.searchText)}\n\n            {(!props.loading && !props.error) && props.searchedTodos.map(todo => renderFunction(todo))}\n\n            <ul className=\"TodoList\">\n                {props.children}\n            </ul>\n        </section>\n    );\n}\n\nexport { TodoList }; ","import React from \"react\";\nimport './CreateTodoButton.css';\nimport { MdOutlinePostAdd } from 'react-icons/md'\n\nfunction CreateTodoButton(props){\n    const onClickButton = () =>{\n        props.setOpenModal(prevState => !prevState);\n        \n    }\n\n    return (\n        <button className=\"CreateTodoButton\"\n        onClick = {onClickButton}\n        >\n            <MdOutlinePostAdd className=\"create-todo-button__icon\"/>\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from \"react\";\nimport './TodoItem.css';\nimport { AiOutlineCheckCircle } from 'react-icons/ai'\nimport { ImCancelCircle } from 'react-icons/im'\n\nfunction TodoItem(props){\n    return(\n        <li className=\"TodoItem\">\n            <span className={`TodoItem-Check ${props.completed && 'TodoItem-check__active'}`}\n            onClick={props.onComplete}\n            >\n            <AiOutlineCheckCircle className=\"TodoItem-check__icon\"/>\n            </span>\n            \n            <p className={`TodoItem-Text ${props.completed && 'TodoItem-Text__active'}`}>{props.text}</p>\n            <span className=\"TodoItem-delete\"\n            onClick = {props.onDelete}\n            >\n            <ImCancelCircle className=\"TodoItem-delete__icon\"/>\n            </span>\n        </li>\n    );\n}\n\nexport { TodoItem };","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './Modal.css';\n\nfunction Modal({ children }){\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            { children }\n        </div>,\n        document.getElementById('modal')\n    );\n}\n\nexport { Modal };","import React from \"react\";\n\nfunction TodoForm({ addTodo, setOpenModal }){\n\n    const [newTodoValue, setNewTodoValue] = React.useState('');\n\n    const onChange = (e) =>{\n        setNewTodoValue(e.target.value)\n    }\n\n    const onCancel = () => {\n        setOpenModal(false);\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    }\n\n\n    return(\n        <form className=\"todos-form\" onSubmit={onSubmit}>\n            <label className=\"newtodo-title\"> What of an amazing task we'll do today?\n            </label>\n            <textarea \n                className = \"newTodo-box\"\n                value = {newTodoValue}\n                onChange = {onChange}\n                placeholder = \"Buy Flappy's food!\"\n            />\n            <div className=\"newTodo-button-container\">\n                <button \n                    id=\"cancel-button\"\n                    type = \"button\"\n                    onClick = {onCancel}\n                 >\n                        Go back\n                </button>\n                <button\n                    id=\"submit-button\"\n                    type = \"submit\"\n                    >\n                        Add todo\n                </button>\n            </div>\n            \n        </form>\n    );\n}\n\nexport { TodoForm };","import React from \"react\";\nimport './EmptyTodos.css'\nfunction EmptyTodos(){\n\n    return(\n        <div className=\"EmptyTodos-message\">\n            <p>Get on and list your first todo!</p> \n            <p>(:</p>\n        </div>\n    );\n}\n\nexport { EmptyTodos };","import React from \"react\";\nimport './TodosLoading.css'\nfunction TodosLoading(){\n    return(\n        <div className=\"LoadingTodo-container\">\n            <span className=\"LoadingTodo-completeIcon\"></span>\n            <p className=\"LoadingTodo-text\">Loading TODOs...</p>\n            <span className=\"LoadingTodo-deleteIcon\"></span>\n        </div>\n    );\n}\n\nexport { TodosLoading };","import React from \"react\";\n\nfunction TodosError({ error }){\n\n    return(\n        <p>Desespérate, hubo un error...</p>\n    );\n}\n\nexport { TodosError };","import React from \"react\";\n\nfunction TodoHeader({ children }){\n    return(\n        <header> {children} </header>\n    );\n}\n\nexport { TodoHeader };","import React from 'react';\nimport { useStorageListener } from './useStorageListener';\nimport './ChangeAlert.css'\n\n\nfunction ChangeAlert({ syncronize }){\n\n    const { showUp, toggleShow } = useStorageListener(syncronize);\n\n    if(showUp){\n        return (\n            <section className=\"change-container\">\n            <p className=\"change-text\">Looks like some changes were made!</p>\n            <button\n            className=\"change-button\"\n            onClick={()=>toggleShow(false)}\n            >Refresh changes</button>\n            </section>\n        );\n    } else {\n        return null;\n    }\n}\n\nexport { ChangeAlert };","import React, { useState } from \"react\";\n\n\nfunction useStorageListener(syncronize){\n\n        const [storageChange, setStorageChange] = useState(false);\n\n        window.addEventListener('storage', (change)=>{\n            if(change.key === 'TODOS_V1'){\n                console.log(\"Se registraron los cambios en TODOS_V1\");\n                setStorageChange(true);\n            }\n        });\n\n        const toggleShow = () =>{\n            syncronize();\n            setStorageChange(false);\n        }\n\n        return { \n            showUp: storageChange,\n            toggleShow,\n        };\n}\n\nexport { useStorageListener };","import React from 'react'\nimport \"./EagleModeButton.css\"\nimport { GiBeastEye } from 'react-icons/gi'\n\nfunction EagleModeButton(props){\n    const onClickButton = () => {\n        props.setEagleMode(prevState => !prevState)\n    }\n\n    return(\n        <button\n        className=\"eagle-mode-button\"\n        onClick={ onClickButton }\n        >\n        <GiBeastEye  className=\"eagle-mode-button-icon\"/>\n        </button>\n    );\n}\n\nexport { EagleModeButton };","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './EagleModeModal.css';\n\nfunction EagleModeModal({ children }){\n    return ReactDOM.createPortal(\n        <div className=\"eagle-mode-modal__background\">\n            { children }\n        </div>,\n        document.getElementById('eagle-mode-modal')\n    );\n}\n\nexport { EagleModeModal };","import React from \"react\";\nimport { GiBeastEye } from 'react-icons/gi'\n\nfunction EagleModeList(props){\n\n\n    const onCancel = () =>{\n        props.setEagleMode(false);\n    }\n\n    return(\n        <section className=\"Eagle-mode-list\" > \n            <div className=\"eagle-mode-list__icon-container\">\n                <GiBeastEye className=\"eagle-mode-list__icon\"/>\n                <span className=\"eagle-mode-list__text\">Eagle Mode</span>\n            </div>    \n            <div className=\"eagle-mode-list__todos\">\n            {props.uncompleteTodosList.map(item => props.renderList(item))}\n            <ul>\n                { props.children }\n            </ul>\n            </div>\n            <button\n            className = \"eagle-mode-list__button\"\n            type=\"button\"\n            onClick={ onCancel }  \n            >Go hunt</button>\n        </section>\n    );\n}\n\nexport { EagleModeList };","import React from \"react\";\nimport \"./RetributionModeButton.css\"\nimport { GiSupersonicArrow } from 'react-icons/gi'\n\n\nfunction RetributionModeButton(props){\n\n    const onClickButton = () =>{\n        props.setRetributionMode(prevState => !prevState);\n    }\n\n     return(\n        <button\n        className=\"retribution-mode-button\"\n        onClick={ onClickButton }\n        \n        >\n           <GiSupersonicArrow className=\"retribution-mode-button__icon\"/>\n        </button>\n        );\n}\n\nexport { RetributionModeButton };","import React from 'react';\nimport  ReactDOM  from 'react-dom';\nimport './RetributionModeModal.css';\n\nfunction RetributionModeModal({ children }){\n    return ReactDOM.createPortal(\n        <div className=\"retribution-mode-modal__background\">\n            { children }\n        </div>,\n        document.getElementById('retribution-mode-modal')\n    );\n}\n\nexport { RetributionModeModal };","import React from \"react\";\nimport { GiSupersonicArrow } from 'react-icons/gi'\n\nfunction RetributionModeList(props){\n\n    const onCancel = () =>{\n        props.setRetributionMode(false);\n    }\n\n    return(\n        <section className=\"retribution-mode-list\">\n        <div className=\"retribution-mode-list__icon-container\">\n            <GiSupersonicArrow className=\"retribution-mode-list__icon\"/>\n            <span className=\"retribution-mode-list__text\">Nice shot!</span>\n        </div> \n        <div className = \"retribution-mode-list__todos\">\n        {props.completedTodosList.map(item => props.renderList(item))}\n            <ul>\n                { props.children }\n            </ul>\n        </div>\n        <button\n        onClick = { onCancel }\n        className = \"retribution-mode-list__button\"\n        type=\"button\"\n        >Get back</button>\n        </section>\n    );\n}\n\nexport { RetributionModeList };","import React from \"react\";\nimport { useTodos } from \"./useTodos\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { TodoList } from \"../TodoList\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { TodoItem } from \"../TodoItem\";\nimport { Modal } from '../Modal';\nimport { TodoForm } from '../TodoForm';\nimport { EmptyTodos } from '../EmptyTodos'\nimport { TodosLoading } from '../TodosLoading'\nimport { TodosError } from '../TodosError';\nimport { TodoHeader } from '../TodoHeader';\nimport { ChangeAlert } from \"../ChangeAlert\";\nimport { EagleModeButton } from \"../EagleModeButton\";\nimport { EagleModeModal } from \"../EagleModeModal\";\nimport { EagleModeList } from \"../EagleModeList\";\nimport { RetributionModeButton } from \"../RetributionModeButton\";\nimport { RetributionModeModal } from \"../RetributionModeModal\";\nimport { RetributionModeList } from \"../RetributionModeList\";\n\nfunction App() {\n  const { \n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n    totalTodos, \n    completedTodos,\n    searchValue, \n    setSearchValue,\n    addTodo,\n    syncTodos,\n    eagleMode,\n    setEagleMode,\n    uncompleteTodosList,\n    RetributionMode,\n    setRetributionMode,\n    completedTodosList\n   } = useTodos();\n\n   return (\n  <React.Fragment>\n    <TodoHeader>\n        <TodoCounter \n        totalTodos={totalTodos}\n        completedTodos={completedTodos}\n        loading={loading}\n        />\n        <TodoSearch \n        searchValue = {searchValue}\n        setSearchValue={setSearchValue}\n        loading={loading}\n        />\n    </TodoHeader>\n\n          <TodoList \n            error={error}\n            loading={loading}\n            searchedTodos={searchedTodos}\n            totalTodos={totalTodos}\n            searchText={searchValue}\n            onError={() => <TodosError />}\n            onLoading={() => <TodosLoading />}\n            onEmptyTodos={()=><EmptyTodos />}\n            onEmptySearchResults={\n              (searchText) => <p style={{textAlign: 'center', color: 'white'}}>Whoops! there's no matches for {searchText}</p>\n            }\n            render={todo => (<TodoItem key={todo.text} text={todo.text} completed= {todo.completed} \n            onComplete={() => completeTodo(todo.text)}\n            onDelete ={() => deleteTodo(todo.text)}\n              />\n              )}\n            />\n\n            {!!openModal && (\n                <Modal>\n                    <TodoForm \n                      addTodo={ addTodo }\n                      setOpenModal = { setOpenModal }\n                    />\n                </Modal>\n            )}\n\n          <CreateTodoButton \n               setOpenModal = {setOpenModal}\n    \n          />\n\n            {!!eagleMode && (\n              <EagleModeModal>\n                <EagleModeList \n                setEagleMode = {setEagleMode}\n                uncompleteTodosList = {uncompleteTodosList}\n                renderList = {item => <TodoItem key={item.text} completed={item.completed} text = {item.text}/>}\n                />\n              </ EagleModeModal>\n\n              )}\n\n          <EagleModeButton \n                setEagleMode = { setEagleMode }\n              \n          />\n\n          {!!RetributionMode && (\n\n            <RetributionModeModal>\n              <RetributionModeList\n              setRetributionMode = { setRetributionMode }\n              completedTodosList = { completedTodosList } \n              renderList = {item => <TodoItem key={item.text} completed={item.completed} text = {item.text} />}\n              />\n            </RetributionModeModal>\n\n          )}\n\n          <RetributionModeButton \n                setRetributionMode = { setRetributionMode }\n            \n          />\n\n          <ChangeAlert\n          syncronize = {syncTodos}\n          />\n   \n    </React.Fragment>\n\n);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index.js';\n// import reactDom from 'react-dom';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}